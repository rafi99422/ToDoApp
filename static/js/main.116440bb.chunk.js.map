{"version":3,"sources":["assets/images/todo.png","components/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","useState","inputData","setInputData","list","localStorage","getItem","JSON","parse","getLocalData","todoList","setTodoList","toggleBtn","setToggleBtn","isEditItem","setIsEditItem","addItem","map","elem","id","todo","allInputData","Date","getTime","toString","alert","useEffect","setItem","stringify","className","src","alt","type","placeholder","value","onChange","e","target","title","onClick","editItem","find","console","log","updatedTodoList","filter","deleteItem","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAAe,MAA0B,iC,OCwI1BA,EA3HF,WACX,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAgCF,mBAXb,WACnB,IAAIG,EAAOC,aAAaC,QAAQ,aAChC,OAAIF,EACKG,KAAKC,MAAMJ,GAEX,GAMgCK,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAkCV,oBAAS,GAA3C,mBAAOW,EAAP,KAAkBC,EAAlB,KACA,EAAoCZ,qBAApC,mBAAOa,EAAP,KAAmBC,EAAnB,KAGMC,EAAU,WACd,GAAKd,EAEE,GAAIA,GAAaU,EACtBD,EACED,EAASO,KAAI,SAACC,GACZ,OAAIA,EAAKC,KAAOL,EACP,2BAAKI,GAAZ,IAAkBE,KAAMlB,IAEnBgB,MAGXL,GAAa,GACbV,EAAa,IACbY,EAAc,UACT,CACL,IAAMM,EAAe,CACnBF,IAAI,IAAIG,MAAOC,UAAUC,WACzBJ,KAAMlB,GAERS,EAAY,GAAD,mBAAKD,GAAL,CAAeW,KAC1BlB,EAAa,SAnBbsB,MAAM,kDAqDV,OAJAC,qBAAU,WACRrB,aAAasB,QAAQ,YAAapB,KAAKqB,UAAUlB,MAChD,CAACA,IAGF,qBAAKmB,UAAU,WAAf,SACE,sBAAKA,UAAU,YAAf,UACE,mCACE,qBAAKC,IAAKV,EAAMW,IAAI,gBACpB,6DAEF,sBAAKF,UAAU,WAAf,UACE,uBACEG,KAAK,OACLC,YAAY,YACZC,MAAOhC,EACPiC,SAAU,SAACC,GACTjC,EAAaiC,EAAEC,OAAOH,UAGzBtB,EACC,mBACEiB,UAAU,cACVS,MAAM,cACNC,QAASvB,IAGX,mBAAGa,UAAU,cAAcS,MAAM,WAAWC,QAASvB,OAGzD,qBAAKa,UAAU,YAAf,SACGnB,EAASO,KAAI,SAACG,GACb,OACE,sBAAKS,UAAU,WAAf,UACE,6BAAKT,EAAKA,OACV,sBAAKS,UAAU,WAAf,UACE,mBACEA,UAAU,sBACVS,MAAM,YACNC,QAAS,kBAhEV,SAACpB,GAChB,IAAIqB,EAAW9B,EAAS+B,MAAK,SAACvB,GAC5B,OAAOA,EAAKC,KAAOA,KAErBuB,QAAQC,IAAIH,GACZ3B,GAAa,GACbV,EAAaqC,EAASpB,MACtBL,EAAcI,GAyDiBqB,CAASpB,EAAKD,OAE/B,mBACEU,UAAU,2BACVS,MAAM,cACNC,QAAS,kBA1DR,SAACpB,GAClBuB,QAAQC,IAAIxB,GACZ,IAAMyB,EAAkBlC,EAASmC,QAAO,SAACzB,GACvC,OAAOD,IAAOC,EAAKD,MAErBR,EAAYiC,GAqDmBE,CAAW1B,EAAKD,YAXNC,EAAKD,SAkB1C,qBAAKU,UAAU,YAAf,SACE,wBACEA,UAAU,eACV,oBAAkB,aAClBU,QA5DQ,WAChB5B,EAAY,KAwDN,SAKE,uDCrHGoC,MARf,WACE,OACE,qBAAKlB,UAAU,MAAf,SACE,cAAC,EAAD,OCMSmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.116440bb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/todo.d27aeb37.png\";","import React, { useState, useEffect } from \"react\";\r\nimport todo from \"../assets/images/todo.png\";\r\n\r\n// get data from local storage\r\nconst getLocalData = () => {\r\n  let list = localStorage.getItem(\"todo-list\");\r\n  if (list) {\r\n    return JSON.parse(list);\r\n  } else {\r\n    return [];\r\n  }\r\n};\r\n\r\nconst Todo = () => {\r\n  const [inputData, setInputData] = useState(\"\");\r\n  const [todoList, setTodoList] = useState(getLocalData());\r\n  const [toggleBtn, setToggleBtn] = useState(false);\r\n  const [isEditItem, setIsEditItem] = useState();\r\n\r\n  // adding items to the list\r\n  const addItem = () => {\r\n    if (!inputData) {\r\n      alert(\"Please write something inside the input field\");\r\n    } else if (inputData && toggleBtn) {\r\n      setTodoList(\r\n        todoList.map((elem) => {\r\n          if (elem.id === isEditItem) {\r\n            return { ...elem, todo: inputData };\r\n          }\r\n          return elem;\r\n        })\r\n      );\r\n      setToggleBtn(true);\r\n      setInputData(\"\");\r\n      setIsEditItem(null);\r\n    } else {\r\n      const allInputData = {\r\n        id: new Date().getTime().toString(),\r\n        todo: inputData,\r\n      };\r\n      setTodoList([...todoList, allInputData]);\r\n      setInputData(\"\");\r\n    }\r\n  };\r\n\r\n  // edit item from the list\r\n  const editItem = (id) => {\r\n    let editItem = todoList.find((elem) => {\r\n      return elem.id === id;\r\n    });\r\n    console.log(editItem);\r\n    setToggleBtn(true);\r\n    setInputData(editItem.todo);\r\n    setIsEditItem(id);\r\n  };\r\n\r\n  // delete items from the list\r\n  const deleteItem = (id) => {\r\n    console.log(id);\r\n    const updatedTodoList = todoList.filter((todo) => {\r\n      return id !== todo.id;\r\n    });\r\n    setTodoList(updatedTodoList);\r\n  };\r\n\r\n  // delete all items from the list\r\n  const removeAll = () => {\r\n    setTodoList([]);\r\n  };\r\n\r\n  // add itesm inside local storage\r\n  useEffect(() => {\r\n    localStorage.setItem(\"todo-list\", JSON.stringify(todoList));\r\n  }, [todoList]);\r\n\r\n  return (\r\n    <div className=\"main-div\">\r\n      <div className=\"child-div\">\r\n        <figure>\r\n          <img src={todo} alt=\"todo-images\" />\r\n          <figcaption>Add Your List...</figcaption>\r\n        </figure>\r\n        <div className=\"addItems\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Add items\"\r\n            value={inputData}\r\n            onChange={(e) => {\r\n              setInputData(e.target.value);\r\n            }}\r\n          />\r\n          {toggleBtn ? (\r\n            <i\r\n              className=\"fas fa-edit\"\r\n              title=\"Update item\"\r\n              onClick={addItem}\r\n            ></i>\r\n          ) : (\r\n            <i className=\"fas fa-plus\" title=\"Add item\" onClick={addItem}></i>\r\n          )}\r\n        </div>\r\n        <div className=\"showItems\">\r\n          {todoList.map((todo) => {\r\n            return (\r\n              <div className=\"eachItem\" key={todo.id}>\r\n                <h3>{todo.todo}</h3>\r\n                <div className=\"todo-btn\">\r\n                  <i\r\n                    className=\"fas fa-edit add-btn\"\r\n                    title=\"Edit item\"\r\n                    onClick={() => editItem(todo.id)}\r\n                  ></i>\r\n                  <i\r\n                    className=\"fas fa-trash-alt add-btn\"\r\n                    title=\"Delete item\"\r\n                    onClick={() => deleteItem(todo.id)}\r\n                  ></i>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"showItems\">\r\n          <button\r\n            className=\"btn effect04\"\r\n            data-sm-link-text=\"Remove All\"\r\n            onClick={removeAll}\r\n          >\r\n            <span>Checklist</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import \"./App.css\";\nimport Todo from \"./components/Todo\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Todo />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}